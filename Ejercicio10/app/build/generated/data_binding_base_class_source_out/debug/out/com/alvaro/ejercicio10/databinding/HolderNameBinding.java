// Generated by view binder compiler. Do not edit!
package com.alvaro.ejercicio10.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.alvaro.ejercicio10.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class HolderNameBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView borrar;

  @NonNull
  public final ImageButton editar;

  @NonNull
  public final ImageView imageView;

  @NonNull
  public final TextView myViewHolder;

  @NonNull
  public final TextView myViewHolder2;

  @NonNull
  public final CardView tarjeta;

  private HolderNameBinding(@NonNull ConstraintLayout rootView, @NonNull ImageView borrar,
      @NonNull ImageButton editar, @NonNull ImageView imageView, @NonNull TextView myViewHolder,
      @NonNull TextView myViewHolder2, @NonNull CardView tarjeta) {
    this.rootView = rootView;
    this.borrar = borrar;
    this.editar = editar;
    this.imageView = imageView;
    this.myViewHolder = myViewHolder;
    this.myViewHolder2 = myViewHolder2;
    this.tarjeta = tarjeta;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static HolderNameBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static HolderNameBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.holder_name, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static HolderNameBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.borrar;
      ImageView borrar = ViewBindings.findChildViewById(rootView, id);
      if (borrar == null) {
        break missingId;
      }

      id = R.id.editar;
      ImageButton editar = ViewBindings.findChildViewById(rootView, id);
      if (editar == null) {
        break missingId;
      }

      id = R.id.imageView;
      ImageView imageView = ViewBindings.findChildViewById(rootView, id);
      if (imageView == null) {
        break missingId;
      }

      id = R.id.myViewHolder;
      TextView myViewHolder = ViewBindings.findChildViewById(rootView, id);
      if (myViewHolder == null) {
        break missingId;
      }

      id = R.id.myViewHolder2;
      TextView myViewHolder2 = ViewBindings.findChildViewById(rootView, id);
      if (myViewHolder2 == null) {
        break missingId;
      }

      id = R.id.tarjeta;
      CardView tarjeta = ViewBindings.findChildViewById(rootView, id);
      if (tarjeta == null) {
        break missingId;
      }

      return new HolderNameBinding((ConstraintLayout) rootView, borrar, editar, imageView,
          myViewHolder, myViewHolder2, tarjeta);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
